
package com.order;

/**
 *  To enable the xml schema file access during wsdl2Java for generting the static stub clients
 *  create a file named jaxp.properties under %JRE_HOME%/lib and then write the following line in it:

      javax.xml.accessExternalSchema = all
 *  
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.3
 * 2016-05-07T12:56:01.640+05:30
 * Generated source version: 3.1.3
 * 
 */
public final class OrderEndpoint_MyOrderPort_Client {

    private static final QName SERVICE_NAME = new QName("http://order.com/", "MyOrderService");

    private OrderEndpoint_MyOrderPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = MyOrderService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
        wsdlURL = new URL("http://localhost:8090/CXF-Soap-Orders/services/MyOrderPort?wsdl");
        MyOrderService ss = new MyOrderService(wsdlURL, SERVICE_NAME);
        OrderEndpoint port = ss.getMyOrderPort();
        System.out.println("THe OrderEndpoint port on clinet side is "+port);
        String orderstatus = port.order("Auto Part", 1000, "Bombay-Services");
        System.out.println("order.result=" + orderstatus);
        
        {
        System.out.println("Invoking order...");
        java.lang.String _order_arg0 = "_Tets Part1";
        int _order_arg1 = 1245;
        java.lang.String _order_arg2 = "_Test Customer";
        java.lang.String _order__return = port.order(_order_arg0, _order_arg1, _order_arg2);
        System.out.println("order.result=" + _order__return);


        }

        System.exit(0);
    }

}
