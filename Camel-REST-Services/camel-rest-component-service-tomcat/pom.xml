 <?xml version="1.0" encoding="UTF-8"?>
 
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion> 
	 
	
    <groupId>org.app</groupId>
	<artifactId>camel-rest-web</artifactId>
	<name>Camel :: App :: Servlet REST Tomcat</name>
	<description>An application using Camel REST implemantaion  with Apache Tomcat</description>
	<packaging>war</packaging>
	<version>1.1</version>

	<properties>
		<swagger-ui.version>2.0.24</swagger-ui.version>
		<camel-version>3.9.0</camel-version>
		<logback-version>1.1.2</logback-version>
		<swagger.url>https://github.com/swagger-api/swagger-ui/archive/v${swagger-ui.version}</swagger.url>
		<destDir>target/swagger-ui</destDir>
		 <log4j-version>1.2.17</log4j-version>
		 <jetty9-version>9.2.9.v20150224</jetty9-version>	
		 <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>	
    <log4j2-version>2.13.3</log4j2-version>
     
	</properties>

	<dependencies>

		<!-- camel -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>			 
			<version>${camel-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
			<version>3.8.0</version>		 
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-servlet</artifactId>
			<version>${camel-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-stream</artifactId>
			<version>${camel-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http</artifactId>
			<version>${camel-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-metrics</artifactId>
			<version>${camel-version}</version>
		</dependency>

		<!-- swagger api -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-swagger</artifactId>
			<version>2.25.3</version>
 		</dependency>

		<!-- use for json binding -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jackson</artifactId>
			<version>${camel-version}</version>
		</dependency>

		<!-- we need spring web -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<!-- <version>4.1.6.RELEASE</version> -->
			<version>5.3.5</version>			
		</dependency>

		<!-- logging -->
		<!-- dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>2.0.0-alpha0</version>
		</dependency>-->
		
		<dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <scope>runtime</scope>
      <version>${log4j2-version}</version>
    </dependency>
		
		
		<!-- <dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-version}</version>
		</dependency> -->
		<!-- <dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback-version}</version>
		</dependency> -->
	</dependencies>

	<build>
		<!-- we do not want version in the WAR name -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- Step 1. - Download Swagger UI project from GitHub -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>download-single</goal>
						</goals>
						<configuration>
							<url>${swagger.url}</url>
							<fromFile>v${swagger-ui.version}.tar.gz</fromFile>
							<toFile>${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz</toFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Step 2. - Decompress content and move it to target/swagger-ui folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				 <version>3.0.0</version>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
							    <mkdir dir="target/swagger-ui"/>
         
								<echo message="Decompress archive" />
								<gunzip
									src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz" />
								<untar
									src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar"
									dest="${project.build.directory}" />
								<echo message="moving resources" />
								<move todir="${destDir}" overwrite="yes">
									<fileset
										dir="${project.build.directory}/swagger-ui-${swagger-ui.version}/dist" />
								</move>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Step 3. Copy Web Resources to target/classes but also to target/swagger-ui -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/webapp</directory>
									<filtering>false</filtering>
								</resource>
								<!-- Copy swagger-ui resources to classes directory to be able to 
									use it with mvn jetty:run -->
								<!-- <resource>
									<directory>${destDir}</directory>
									<filtering>false</filtering>
								</resource> -->
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Step 4. Add Swagger-ui Resources to the WAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>target/swagger-ui/</directory>
							<includes>
								<include>**/*.*</include>
							</includes>
						</resource>
					</webResources>
					<warName>camel-rest-web</warName>
				</configuration>
			</plugin>

			<!-- allows running this example with mvn:jetty-run -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty9-version}</version>
				<configuration>
					<webAppSourceDirectory>target/classes</webAppSourceDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>